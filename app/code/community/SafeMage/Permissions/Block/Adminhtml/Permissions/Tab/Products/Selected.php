<?php
/*
NOTICE OF LICENSE

This source file is subject to the SafeMageEULA that is bundled with this package in the file LICENSE.txt.

It is also available at this URL: https://www.safemage.com/LICENSE_EULA.txt

Copyright (c)  SafeMage (https://www.safemage.com/)
*/

class SafeMage_Permissions_Block_Adminhtml_Permissions_Tab_Products_Selected
    extends SafeMage_Permissions_Block_Adminhtml_Permissions_User_Tab_Ownproducts
{
    //protected $_storeIdsVarName = 'products[store_ids]';

    public function __construct()
    {
        parent::__construct();

        $this->_processHttpParams();
        $this->setId('selectedProductsGrid');

        $this->_selectedProductsVarName = Mage::helper('safemage_permissions/request')->getRoleSelectedProductsVarName();
        $this->_defaultFilter = array('massaction' => 1);
        if ($storeIds = $this->getData($this->getStoreIdsVarName())) {
            $this->_defaultFilter['store_ids']= implode(',', $storeIds);
        }
    }

    public function getStoreIdsVarName()
    {
        $varName = Mage::helper('safemage_permissions/request')->getProductsVarName();
        return $varName . '[store_ids]';
    }

    public function setCollection($collection)
    {
        $perm = Mage::registry('current_role')->getPermissions('product');
        $this->_collection = $collection;

        if ($this->isFirstTimeOpened()) {
            $selectedProductIds = $perm->getIds();

            if ($storeIds = $this->getData($this->getStoreIdsVarName())) {
                $websiteIds = Mage::getResourceModel('safemage_permissions/core')->getWebsiteIdsByStores($storeIds);
                $this->getCollection()->addWebsiteFilter($websiteIds);

                $selectedProductIds = Mage::getResourceModel('safemage_permissions/product')
                    ->filterProductIdsByWebsites($selectedProductIds, $websiteIds)
                ;
                $this->getMassactionBlock()->setMySelectedProducts($selectedProductIds);
                $this->getColumn('massaction')->setSelected($selectedProductIds);
            }
        }
    }

    protected function _prepareColumns()
    {
        $parent = parent::_prepareColumns();

        $this->addColumn('store_ids', array(
            'type' => 'text',
            'header' => 'Store IDs',
            'column_css_class' => 'no-display',
            'header_css_class' => 'no-display',
            'filter_condition_callback' => array($this, '_storesFilter'),
        ));

        return $parent;
    }

    public function _storesFilter($collection, $column)
    {
        $sStoreIds = $column->getFilter()->getValue();
        $storeIds = explode(',', $sStoreIds);
        $websiteIds = Mage::getResourceModel('safemage_permissions/core')->getWebsiteIdsByStores($storeIds);
        if (count($websiteIds)) {
            $this->getCollection()->addWebsiteFilter($websiteIds);
        }

        return $this;
    }

    public function getGridUrl()
    {
        return $this->getUrl('adminhtml/safemage_permissions_ajax/getRoleProductsSelected', array('_current'=>true));
    }

    protected function _beforeToHtml()
    {
        $parent = parent::_beforeToHtml(); // TODO: Change the autogenerated stub

        if ($this->isFirstTimeOpened()) {
            $storeIds = $this->getData($this->getStoreIdsVarName());
            if (count($storeIds)) {
                $sStoreIds = implode(',', $storeIds);
                $this->getColumn('store_ids')->getFilter()->setValue($sStoreIds);
            }
        }

        return $parent;
    }

    protected function _processHttpParams()
    {
        if ($params = $this->getRequest()->getPost()) {
            $this->addData($params);
        }
    }
}
